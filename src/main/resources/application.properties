spring.datasource.url=jdbc:h2:mem:funkos
spring.datasource.username=sa
spring.datasource.password=password
spring.datasource.driver-class-name=org.h2.Driver
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
server.port=${API_PORT:8080}
# Para los mensajes en las excepciones
server.error.include-message=always
spring.h2.console.enabled=false
spring.jpa.open-in-view=true
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always
## SSL
server.ssl.key-store-type=PKCS12
server.ssl.key-store=classpath:cert/server_keystore.p12
# La contraseñaa usada para generar el certificado
server.ssl.key-store-password=1234567
# El alias usado para mapear o referenciar el certificado
server.ssl.key-alias=serverKeyPair
server.ssl.enabled=true
# Para la negociacion de contenido
spring.mvc.contentnegotiation.favor-parameter=true
spring.mvc.contentnegotiation.parameter-name=format
# Configuracion de Mongo
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.database=funkos
spring.data.mongodb.username=admin
spring.data.mongodb.password=admin123
# Configuracion del Storage
upload.root-location=storage-dir
upload.delete=true
# Configuracion de Thymeleaf
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
# JwtConfiguration
jwt.secret=MeGustanLosPeinosdeLeganesPorqueSonGrandesYHermosos!
jwt.expiration=86400
# Variables personales
api.version=${API_VERSION:v1}

